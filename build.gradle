plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    openapi = "2.3.0"
    mapstructVersion = "1.5.5.Final"
    lombokMapstructBindingVersion = "0.2.0"
    hypersistenceUtilsHibernate62 = "3.7.0"
}

bootJar {
    mainClass = 'com.example.flutter.FlutterApplication'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "io.hypersistence:hypersistence-utils-hibernate-62:${hypersistenceUtilsHibernate62}"
    runtimeOnly "org.postgresql:postgresql"

    implementation "org.springframework.boot:spring-boot-starter-validation"

    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapi}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:${openapi}"
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
            "-Amapstruct.defaultComponentModel=spring",
            "-Amapstruct.unmappedTargetPolicy=ERROR"
    ]
}